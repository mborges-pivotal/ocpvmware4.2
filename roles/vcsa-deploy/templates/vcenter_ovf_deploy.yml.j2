---
# Using the ovftool binary, deploys the required appliance(s)
# The failed_when property is used to capture both soft failures ("Monitor failed:") and hard
#  failures (return code > 0)
# - include_vars: vault.yml

- name: Deploy the vCenter server appliance
  command: >
    {{ ovftool }}
    --sourceType=OVA
    --acceptAllEulas
    --allowExtraConfig
    --noSSLVerify
    --diskMode=thin
    --skipManifestCheck
    --X:injectOvfEnv
    --powerOn
    --X:httpTimeout='{{ ovftool_http_timeout }}'
    --X:enableHiddenProperties
    --X:connectionFileTransferRetryCount=3
    --X:waitForIp
    --prop:guestinfo.cis.appliance.root.shell=/bin/bash
    --prop:guestinfo.cis.db.type=embedded
    --diskMode=thin
    --datastore='{{ vcenter_esx_datastore }}'
    --network='{{ vcenter_esx_portgroup }}'
    --prop:guestinfo.cis.appliance.ssh.enabled='{{ ssh_enable }}'
    --prop:guestinfo.cis.appliance.time.tools-sync='{{ time_tools_sync }}'
    --prop:guestinfo.cis.appliance.net.addr.family='{{ net_addr_family }}'
{% if network_ip_scheme == "DHCP" %}
    --name='{{ vcenter_appliance_name }}'
    --prop:guestinfo.cis.appliance.root.passwd='{{ vcenter_password }}'
    --prop:guestinfo.cis.appliance.net.mode=dhcp
{% elif network_ip_scheme == "Static" %}
    --name='{{ ib_vcenter_appliance_name }}'
    --prop:guestinfo.cis.appliance.net.pnid='{{ vcenter_fqdn }}'
    --prop:guestinfo.cis.appliance.root.passwd='{{ vcenter_password }}'
    --prop:guestinfo.cis.appliance.net.mode=static
    --prop:guestinfo.cis.appliance.net.addr='{{ vcenter_ip_address | ipaddr }}'
    --prop:guestinfo.cis.appliance.net.prefix='{{ vcenter_ip_netmask | ipaddr }}'
    --prop:guestinfo.cis.appliance.net.gateway='{{ vcenter_ip_gateway | ipaddr }}'
    --prop:guestinfo.cis.appliance.net.dns.servers='{% for item in dns_servers %}{{ item }}{{ "," if not loop.last else "" }}{% endfor %}'
{% endif %}
    --prop:guestinfo.cis.system.vm0.hostname={{ vcenter_psc_appliance_dns_name_manual }}
    --prop:guestinfo.cis.vmdir.password='{{ vcenter_psc_sso_password }}'
    --deploymentOption='management-{{ vcenter_deployment_option }}'
    '{{ vcsa_ova }}'
    vi://'{{ vcenter_deploy_target_user_name | urlencode }}':'{{ vcenter_deploy_target_user_password | urlencode }}'@{{ vcenter_deploy_target_url }}
  register: deploy_ovf_cmd_result
  ignore_errors: True
  failed_when: "'Monitor failed:' in deploy_ovf_cmd_result.stdout or deploy_ovf_cmd_result.rc > 0"
